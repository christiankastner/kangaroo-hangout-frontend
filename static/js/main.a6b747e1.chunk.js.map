{"version":3,"sources":["containers/MapContainer.js","components/Loader.js","containers/GoogleMapsContainer.js","presentational/ActivityCard.js","containers/SearchActivitiesContainer.js","presentational/SearchForm.js","containers/MyActivitiesChain.js","components/DateForm.js","components/AddressModal.js","services/api.js","containers/DisplayActivitiesContainer.js","CreateEvent.js","presentational/EventCard.js","containers/DisplayEvents.js","presentational/Welcome.js","components/EditUserModal.js","UserShow.js","components/HOC/withLogin.js","components/LandingLogin.js","containers/LandingContainer.js","components/Navlogin.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["withScriptjs","withGoogleMap","props","defaultGeocode","lat","lng","defaultZoom","center","markers","map","place","console","log","geometry","location","key","id","position","onClick","handleSelectPlace","selected","onCloseClick","name","formatted_address","Loader","className","src","GoogleMapsContainer","MapContainer","googleMapURL","process","loadingElement","style","height","containerElement","mapElement","ActivityCard","activity","image","icon","types","data-testid","Card","header","description","extra","handleAdd","Button","primary","Icon","color","handleRemove","secondary","defaultProps","SearchActivitiesContainer","loading","activities","selectOptions","SearchForm","Form","onChange","handleOnChange","Field","placeholder","Group","Select","options","option","value","text","replace","event","handleOnSelect","target","innerText","num","parseInt","preventDefault","handleOnSearch","MyActivitiesChain","myActivities","DateForm","date","handleChangeDate","AddressModal","handleSetAddress","fluid","API_ROOT","headers","Accepts","Authorization","localStorage","getItem","api","login","data","fetch","method","body","JSON","stringify","then","res","ok","json","error","getCurrentUser","editCurrentUser","resp","deleteCurrentUser","signup","createEvent","deleteEvent","fetchPlaces","search","Accept","google_api","fetchAddress","DisplayActivitiesContainer","setState","state","searchModal","geocode","prevState","results","toggleSearchModal","inMyActivities","i","length","handleOnSave","postEvent","handleRoutePage","toDateString","activities_attributes","object","filter","Date","query","radius","type","Modal","open","this","onClose","closeOnDimmerClick","Header","Content","Divider","horizontal","React","Component","CreateEvent","openModal","eventId","path","history","push","EventCard","Feed","Event","Label","Summary","Meta","content","handleDeleteEvent","attendees","DisplayEvents","events","renderEvents","Welcome","EditUserModal","user","email","handleEditUser","handleDeleteUser","UserShow","fetchUserInfo","readJson","segmentEvents","bifurcated","upcomingEvents","pastEvents","eventDate","today","toggleEditModal","edit","edited","handleLogout","handletoggle","withLogin","WrappedComponent","handleChange","e","handleOnSignupChange","persist","handleOnLoginChange","handleLoginClick","setItem","jwt","handleLogin","handleSignupClick","catch","clear","loggedIn","toggle","eventLink","password","logout","size","Description","Input","LandingContainer","exact","to","Menu","Item","NavBar","App","component","routerProps","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0ZAgCeA,yBAAaC,yBA7BhB,SAAAC,GAAU,IAAD,EACIA,EAAMC,eAAnBC,EADS,EACTA,IAAKC,EADI,EACJA,IAUb,OACI,kBAAC,YAAD,CAAWC,YAAa,GAAIC,OAAQ,CAACH,IAAKA,EAAKC,IAAKA,IATpDH,EAAMM,QAAQC,KAAI,SAAAC,GACdC,QAAQC,IAAIF,GADW,MAEFA,EAAMG,SAASC,SAA5BV,EAFe,EAEfA,IAAKC,EAFU,EAEVA,IACb,OAAQ,kBAAC,SAAD,CAAQU,IAAKL,EAAMM,GAAIC,SAAU,CAACb,IAAKA,EAAKC,IAAKA,GAAMa,QAAS,kBAAMhB,EAAMiB,kBAAkBT,SAQrGR,EAAMkB,UACH,kBAAC,aAAD,CACIH,SAAU,CAACb,IAAKF,EAAMkB,SAASP,SAASC,SAASV,IAAKC,IAAKH,EAAMkB,SAASP,SAASC,SAAST,KAC5FgB,aAAc,kBAAMnB,EAAMiB,kBAAkB,QAE5C,6BACI,4BAAKjB,EAAMkB,SAASE,MACpB,2BAAIpB,EAAMkB,SAASG,0BChB5BC,EANA,WACX,OACI,yBAAKC,UAAU,aAAaC,IAAI,uGCiBzBC,EAjBa,SAAAzB,GACxB,OACQ,yBAAKuB,UAAU,kBACX,kBAACG,EAAD,CACIC,aAAY,gGAA2FC,2CACvGC,eAAgB,yBAAKC,MAAO,CAACC,OAAQ,SAAU,kBAAC,EAAD,OAC/CC,iBAAkB,yBAAKF,MAAO,CAAEC,OAAO,UACvCE,WAAY,yBAAKH,MAAO,CAAEC,OAAO,UACjC9B,eAAgBD,EAAMC,eACtBgB,kBAAmBjB,EAAMiB,kBACzBC,SAAUlB,EAAMkB,SAChBZ,QAASN,EAAMM,Y,2BCZ7B4B,EAAe,SAAAlC,GAAU,IAAD,EAC4BA,EAAMmC,SAA9Cf,GADY,EACnBgB,MADmB,EACZhB,MAAaiB,GADD,EACNC,MADM,EACCD,MAAMhB,EADP,EACOA,kBAYjC,OACI,yBAAKkB,cAAY,iBACb,kBAACC,EAAA,EAAD,CACIC,OAAQrB,EACRsB,YAAa,8BAAM,yBAAKnB,UAAU,OAAOC,IAAKa,IAAjC,KAA2ChB,GACxDsB,MAbJ,oCACK3C,EAAM4C,UAAY,kBAACC,EAAA,EAAD,CAAQN,cAAY,kBAAkBO,SAAO,EAAC9B,QAAS,kBAAMhB,EAAM4C,UAAU5C,EAAMmC,YAAW,kBAACY,EAAA,EAAD,CAAM3B,KAAK,SAAzG,OACjB,kBAACyB,EAAA,EAAD,CAAQN,cAAY,kBAAkBS,MAAM,MAAMhC,QAAS,kBAAMhB,EAAMiD,aAAajD,EAAMmC,YAAW,kBAACY,EAAA,EAAD,CAAM3B,KAAK,SAAhH,UACF,kBAACyB,EAAA,EAAD,CAAQN,cAAY,kBAAkBW,WAAS,EAAClC,QAAS,kBAAMhB,EAAMiB,kBAAkBjB,EAAMmC,YAA7F,gBAgBhBD,EAAaiB,aAAe,CACxBhB,SAAU,CACNf,KAAM,mBACNiB,KAAM,kBAACU,EAAA,EAAD,CAAM3B,KAAK,WACjBkB,MAAO,OACPjB,kBAAmB,oBAIZa,QCZAkB,EApBmB,SAAApD,GAY9B,OACI,yBAAKuB,UAAU,6BACVvB,EAAMqD,QAAU,kBAAC,EAAD,MAXdrD,EAAMsD,WAAatD,EAAMsD,WAAW/C,KAAI,SAAA4B,GAC3C,OAAO,kBAAC,EAAD,CACHA,SAAUA,EACVtB,IAAKsB,EAASrB,GACdG,kBAAmBjB,EAAMiB,kBACzB2B,UAAW5C,EAAM4C,eACpB,wBAAIrB,UAAU,cAAd,gB,SC8BPgC,EAAgB,CAClB,aACA,UACA,iBACA,WACA,cACA,MACA,SACA,OACA,MACA,eACA,gBACA,aACA,gBACA,cACA,OACA,aACA,aACA,aACA,aACA,WACA,SACA,WACA,SACA,YACA,iBACA,oBACA,aACA,UACA,mBACA,SACA,YACA,cACA,oBACA,UACA,eACA,UACA,eACA,kBACA,cACA,yBACA,MACA,YACA,iBACA,eACA,mBACA,WACA,mBACA,gBACA,UACA,SACA,UACA,qBACA,eACA,0BACA,YACA,UACA,gBACA,gBACA,SACA,eACA,gBACA,iBACA,SACA,aACA,UACA,OACA,UACA,YACA,WACA,kBACA,UACA,SACA,cACA,iBACA,qBACA,aACA,qBACA,UACA,SACA,mBACA,aACA,gBACA,MACA,UACA,UACA,QACA,iBACA,cACA,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","file":"static/js/main.a6b747e1.chunk.js","sourcesContent":["import React from 'react';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\"\n\nconst Map = props => {\n    const { lat, lng } = props.defaultGeocode\n    const renderMarkers = () => (\n        props.markers.map(place => {\n            console.log(place)\n            const { lat, lng } = place.geometry.location\n            return (<Marker key={place.id} position={{lat: lat, lng: lng}} onClick={() => props.handleSelectPlace(place)}/>)\n            })\n    )\n\n\n    return (\n        <GoogleMap defaultZoom={10} center={{lat: lat, lng: lng}} >\n            {renderMarkers()}\n            {props.selected && (\n                <InfoWindow \n                    position={{lat: props.selected.geometry.location.lat, lng: props.selected.geometry.location.lng}}\n                    onCloseClick={() => props.handleSelectPlace(null)}\n                    >\n                    <div>\n                        <h2>{props.selected.name}</h2>\n                        <p>{props.selected.formatted_address}</p>\n                    </div>\n                </InfoWindow>\n            )}\n        </GoogleMap>\n    );\n}\n\nexport default withScriptjs(withGoogleMap(Map))","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <img className=\"loader-gif\" src=\"https://66.media.tumblr.com/cdace9d2fb94029e0c028fd6ed6fe635/tumblr_nkfx7qq6ct1serey3o1_1280.gifv\" />\n    )\n}\n\nexport default Loader","import React from 'react'\nimport MapContainer from './MapContainer'\nimport Loader from \"../components/Loader\"\n\nconst GoogleMapsContainer = props => {\n    return (\n            <div className=\"maps-container\" >\n                <MapContainer \n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_API_KEY}`}\n                    loadingElement={<div style={{height: '100%'}} ><Loader /></div>}\n                    containerElement={<div style={{ height: `100%` }} />}\n                    mapElement={<div style={{ height: `100%` }} />}\n                    defaultGeocode={props.defaultGeocode}\n                    handleSelectPlace={props.handleSelectPlace}\n                    selected={props.selected}\n                    markers={props.markers}\n                    />\n            </div>\n    )\n}\n\nexport default GoogleMapsContainer","import React from 'react'\nimport {Card, Icon, Button} from 'semantic-ui-react'\n\nconst ActivityCard = props => {\n    const {image, name, types, icon, formatted_address} = props.activity\n    // const formatTypes = types.reduce((total, type) => total + \" \" + type)\n    const extra = () => {\n        return(\n            <>\n                {props.handleAdd ? <Button data-testid=\"activity-button\" primary onClick={() => props.handleAdd(props.activity)}><Icon name=\"plus\" />Add</Button> \n                : <Button data-testid=\"activity-button\" color=\"red\" onClick={() => props.handleRemove(props.activity)}><Icon name=\"undo\"/>Remove</Button>}\n                <Button data-testid=\"activity-select\" secondary onClick={() => props.handleSelectPlace(props.activity)}>Inspect</Button>\n            </>\n        )\n    }\n\n    return (\n        <div data-testid=\"activity-card\">\n            <Card\n                header={name}\n                description={<span><img className=\"icon\" src={icon}/>  {formatted_address}</span>}\n                extra={extra()}\n            />\n        </div>\n    )\n}\n\nActivityCard.defaultProps = {\n    activity: {\n        name: \"Cannot Find Name\",\n        icon: <Icon name=\"marker\" />,\n        types: \"misc\",\n        formatted_address: \"No Result Found\"\n    }\n}\n\nexport default ActivityCard","import React from 'react';\nimport ActivityCard from '../presentational/ActivityCard';\nimport Loader from '../components/Loader'\n\nconst SearchActivitiesContainer = props => {\n\n    const renderActivities = () => {\n        return props.activities ? props.activities.map(activity => {\n            return <ActivityCard \n                activity={activity} \n                key={activity.id}\n                handleSelectPlace={props.handleSelectPlace}\n                handleAdd={props.handleAdd} />\n        }) : <h3 className=\"no-results\">No Results</h3>\n    }\n\n    return (\n        <div className=\"search-activities results\">\n            {props.loading ? <Loader /> : renderActivities()}\n        </div>\n        )\n    \n}\n\nexport default SearchActivitiesContainer","import React from 'react'\nimport {Form, Icon} from 'semantic-ui-react'\n\nconst SearchForm = (props) => {\n    const renderRadiusOptions = () => {\n        return [5,10,15,20].map(num => {\n            return {key: num, value: num * 1600, text: `${num} Miles`}\n        })\n    }\n    const renderSelectOptions = () => {\n        return selectOptions.map(option => {\n            return {key: option, value: option, text: option.replace(/_/g, \" \")}\n        })\n    }\n\n    const handleOnSelectRadius = (event) => {\n        props.handleOnSelect(\"radius\", parseInt(event.target.innerText)*1600)\n    }\n\n    const handleOnSelectType = (event) => {\n        props.handleOnSelect(\"type\", event.target.innerText.replace(/ /g, \"_\"))\n    }\n\n    const handleOnClick = (event) => {\n        event.preventDefault()\n        props.handleOnSearch()\n    }\n\n    return (\n        <Form className=\"search-form\" onChange={props.handleOnChange}>\n            <Form.Field>\n                <label>Search</label>\n                <input placeholder=\"Keyword\" id=\"query\"/>\n            </Form.Field>\n            <Form.Group >\n                <Form.Select placeholder=\"Activity Type\" options={renderSelectOptions()} name=\"type\" onChange={handleOnSelectType} />\n                <Form.Select placeholder=\"Radius of Activity\" options={renderRadiusOptions()} name=\"radius\" onChange={handleOnSelectRadius} />\n            </Form.Group>\n            <Form.Button onClick={ handleOnClick }><Icon name=\"search\" />Search</Form.Button>\n        </Form>\n    )\n}\n\nconst selectOptions = [\n    \"accounting\",\n    \"airport\",\n    \"amusement_park\",\n    \"aquarium\",\n    \"art_gallery\",\n    \"atm\",\n    \"bakery\",\n    \"bank\",\n    \"bar\",\n    \"beauty_salon\",\n    \"bicycle_store\",\n    \"book_store\",\n    \"bowling_alley\",\n    \"bus_station\",\n    \"cafe\",\n    \"campground\",\n    \"car_dealer\",\n    \"car_rental\",\n    \"car_repair\",\n    \"car_wash\",\n    \"casino\",\n    \"cemetery\",\n    \"church\",\n    \"city_hall\",\n    \"clothing_store\",\n    \"convenience_store\",\n    \"courthouse\",\n    \"dentist\",\n    \"department_store\",\n    \"doctor\",\n    \"drugstore\",\n    \"electrician\",\n    \"electronics_store\",\n    \"embassy\",\n    \"fire_station\",\n    \"florist\",\n    \"funeral_home\",\n    \"furniture_store\",\n    \"gas_station\",\n    \"grocery_or_supermarket\",\n    \"gym\",\n    \"hair_care\",\n    \"hardware_store\",\n    \"hindu_temple\",\n    \"home_goods_store\",\n    \"hospital\",\n    \"insurance_agency\",\n    \"jewelry_store\",\n    \"laundry\",\n    \"lawyer\",\n    \"library\",\n    \"light_rail_station\",\n    \"liquor_store\",\n    \"local_government_office\",\n    \"locksmith\",\n    \"lodging\",\n    \"meal_delivery\",\n    \"meal_takeaway\",\n    \"mosque\",\n    \"movie_rental\",\n    \"movie_theater\",\n    \"moving_company\",\n    \"museum\",\n    \"night_club\",\n    \"painter\",\n    \"park\",\n    \"parking\",\n    \"pet_store\",\n    \"pharmacy\",\n    \"physiotherapist\",\n    \"plumber\",\n    \"police\",\n    \"post_office\",\n    \"primary_school\",\n    \"real_estate_agency\",\n    \"restaurant\",\n    \"roofing_contractor\",\n    \"rv_park\",\n    \"school\",\n    \"secondary_school\",\n    \"shoe_store\",\n    \"shopping_mall\",\n    \"spa\",\n    \"stadium\",\n    \"storage\",\n    \"store\",\n    \"subway_station\",\n    \"supermarket\",\n    \"synagogue\",\n    \"taxi_stand\",\n    \"tourist_attraction\",\n    \"train_station\",\n    \"transit_station\",\n    \"travel_agency\",\n    \"university\",\n    \"veterinary_care\",\n    \"zoo\"\n]\n\nexport default SearchForm","import React from 'react';\nimport ActivityCard from '../presentational/ActivityCard'\nimport \"./styles/MyActivitiesChain.css\"\n\nconst MyActivitiesChain = props => {\n    const renderMyActivities = () => {\n        return props.myActivities.map(activity => {\n            return (<li>\n                    <ActivityCard \n                    className=\"my-activity\" \n                    handleRemove={props.handleRemove} \n                    activity={activity} />\n                </li>)\n        })\n    }\n\n    return (\n        <div className=\"activity-chain\">\n            <ul>\n                {props.myActivities ? renderMyActivities() : []} \n            </ul>\n        </div>\n    )\n}\n\nexport default MyActivitiesChain","import React from 'react';\nimport DatePicker from 'react-date-picker';\n \nconst DateForm = props => {\n\n  const onChange = date => {\n      props.handleChangeDate(date)\n    }\n  return (\n    <div>\n      <DatePicker\n        onChange={onChange}\n        value={props.date}\n      />\n    </div>\n  )\n}\n\nexport default DateForm","import React from 'react';\nimport {Form, Button} from 'semantic-ui-react'\n\nconst AddressModal = props => {\n    return (\n        <Form>\n            <Form.Field onChange={props.handleOnChange}>\n                <label>Address</label>\n                <input placeholder=\"Address\" id=\"location\"/>\n            </Form.Field>\n            <Button onClick={props.handleSetAddress} fluid={true} color=\"yellow\">\n                Search By This Address\n            </Button>\n        </Form>\n    )\n}\n\nexport default AddressModal","const API_ROOT = 'https://evening-peak-84473.herokuapp.com'\n\nconst headers = () => {\n    return {\n        'Content-Type': 'application/json',\n        Accepts: 'application/json',\n        Authorization: localStorage.getItem('token')\n    }\n};\n\nconst login = data => {\n    return fetch(`${API_ROOT}/auth`, {\n        method: 'POST',\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => {\n        if(res.ok) {\n            return res.json()\n        } else {\n            return {error: \"Not a valid username or password\"}\n        }\n    });\n};\n\nconst signup = data => {\n    return fetch(`${API_ROOT}/users`, {\n        method: \"POST\",\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => {\n        if(res.ok) {\n            return res.json()\n        } else {\n            return {error: \"Not a valid profile\"}\n        }\n    })\n}\n\nconst getCurrentUser = () => {\n    return fetch(`${API_ROOT}/current_user`, {\n        method: \"GET\",\n        headers: headers()\n    }).then(res => {\n        if(res.ok) {\n            return res.json()\n        } else {\n            return {error: \"Not a valid profile\"}\n        }\n    })\n};\n\nconst editCurrentUser = (data) => {\n    return fetch(`${API_ROOT}/current_user`,{\n        method: \"PATCH\",\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(resp => {\n        if(resp.ok) {\n            return resp.json()\n        } else {\n            return {error: \"Not a valid profile\"}\n        }\n    })\n}\n\nconst deleteCurrentUser = () => {\n    return fetch(`${API_ROOT}/current_user`, {\n        method: \"DELETE\",\n        headers: headers(),\n    }).then(resp => {\n        if(resp.ok) {\n            return resp.json()\n        } else {\n            return {error: \"Not a valid profile\"}\n        }\n    })\n}\n\nconst createEvent = (data) => {\n    return fetch(`${API_ROOT}/events`, {\n        method: \"POST\",\n        headers: headers(),\n        body: JSON.stringify(data)\n    }).then(res => {\n        if(res.ok) {\n            return res.json()\n        } else {\n            return {error: \"Not a valid profile\"}\n        }\n    })\n}\n\nconst deleteEvent = (data) => {\n    return fetch(`${API_ROOT}/events/${data}`, {\n        method: \"DELETE\",\n        headers: headers()\n    }).then(res => {\n        if(res.ok) {\n            return res.json()\n        } else {\n            return {error: \"Not a valid profile\"}\n        }\n    })\n}\n\nconst fetchPlaces = (search) => {\n    return fetch(`${API_ROOT}/google_api`, {\n        method: \"POST\",\n        headers: {\n            Accept: 'applicaton/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({google_api: search})\n    })\n    .then(resp => resp.json())\n}\n\nconst fetchAddress = (search) => {\n    return fetch(`${API_ROOT}/google_api/geocode`, {\n            method: \"POST\",\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(search)\n        }).then(resp => resp.json())\n}\n\n\nconst api = {\n    auth: {\n        login,\n        getCurrentUser,\n        editCurrentUser,\n        deleteCurrentUser\n    },\n    user: {\n        signup,\n    },\n    event: {\n        createEvent,\n        deleteEvent\n    },\n    google: {\n        fetchPlaces,\n        fetchAddress\n    }\n}\n\nexport { api }","import React from \"react\";\nimport GoogleMapsContainer from \"./GoogleMapsContainer\";\nimport SearchActivitiesContainer from \"./SearchActivitiesContainer\";\nimport SearchForm from '../presentational/SearchForm'\nimport MyActivitiesChain from \"./MyActivitiesChain\";\nimport DateForm from \"../components/DateForm\";\nimport { Divider, Button, Icon, Modal } from \"semantic-ui-react\";\nimport \"./styles/DisplayActivitiesContainer.css\"\nimport AddressModal from '../components/AddressModal'\nimport { api } from \"../services/api\";\n\nexport default class DisplayActivitiesContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            results: [],\n            searchModal: true,\n            date: new Date(),\n            myActivities: [],\n            selected: null,\n            search: {\n                query: \"\",\n                location: \"\",\n                geocode: {\n                    lat: 0,\n                    lng: 0,\n                },\n                radius: 32000,\n                type: \"\"\n            },\n            error: ''\n        }\n    }\n\n    handleOnChange = (event) => {\n        const {id, value} = event.target\n        this.handleOnSelect(id, value)\n    }\n\n    handleSelectPlace = (place) => {\n        this.setState({\n            selected: place\n        })\n    }\n\n    handleSetAddress = () => {\n        api.google.fetchAddress(this.state.search)\n            .then(json => {\n                this.setState({\n                    searchModal: !this.state.searchModal,\n                    search: { \n                        ...this.state.search,\n                        geocode: {\n                            lat: json.lat,\n                            lng: json.lng\n                        }\n                    }\n                })\n            })\n    }\n\n    handleChangeDate = (date) => {\n        this.setState({\n            date: date\n        })\n    }\n\n    handleOnSelect = (id, value) => {\n        this.setState(prevState => {\n            return {\n                search: {\n                    ...prevState.search,\n                    [id]: value\n                }\n            } \n        })\n    }\n\n    handleOnSearch = () => {\n        this.setState({loading: true}, () => {\n            api.google.fetchPlaces(this.state.search)\n            .then(json => {\n                console.log(json)\n                this.setState({\n                    results: json.results,\n                    loading: false\n                })\n            })\n        })\n    }\n\n    toggleSearchModal = () => {\n        this.setState({searchModal: !this.state.searchModal})\n    }\n\n    inMyActivities = (activity) => {\n        for (let i = 0; i < this.state.myActivities.length; i++) {\n            if (this.state.myActivities[i].id === activity.id) {\n                return true\n            }\n        }\n        return false\n    }\n\n    handleOnSave = () => {\n        if (!localStorage[\"token\"]) {\n            this.setState({error: \"Must Login to Save Event\"})\n        } else {\n            this.postEvent() \n            this.setState({\n                myActivities: []\n            })\n            this.props.handleRoutePage(`/user`)\n        }\n    }\n\n    postEvent = () => {\n        api.event.createEvent({event: {\n            date: this.state.date.toDateString(),\n            activities_attributes: this.state.myActivities\n        }})\n            .then(json => {\n                return true\n            })\n    }\n    \n    handleAdd = (activity) => {\n        if (this.inMyActivities(activity) === false) {\n            this.setState(prevState => {\n                return {myActivities: [...prevState.myActivities, activity]}\n            })\n        }\n    }\n\n    handleRemove = (object) => {\n        this.setState(prevState => {\n            return {\n                myActivities: prevState.myActivities.filter(activity => activity.id !== object.id)\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Modal open={this.state.searchModal} onClose={this.toggleSearchModal} closeOnDimmerClick={true}>\n                    <Modal.Header>Give An Address Before You Search</Modal.Header>\n                    <Modal.Content>\n                        <AddressModal \n                            handleOnChange={this.handleOnChange} \n                            handleSetAddress={this.handleSetAddress} />\n                    </Modal.Content>\n                </Modal>\n                <MyActivitiesChain \n                    myActivities={this.state.myActivities}\n                    handleRemove={this.handleRemove}\n                    />\n                <Divider horizontal>\n                    <ul className=\"divider-list\">\n                        <li>\n                        <p style={{color: \"red\"}}>{`${this.state.error}`}</p>\n                        </li>\n                        <li>\n                            <Button color=\"primary\" onClick={this.handleOnSave}>\n                            <Icon name=\"calendar plus outline\" />Save Event</Button>\n                        </li>\n                        <li>\n                            <DateForm handleChangeDate={this.handleChangeDate} date={this.state.date} />\n                        </li>\n                        <li>\n                            <button onClick={this.toggleSearchModal}><b>Address:</b> {this.state.search.location}</button>\n                        </li>\n                    </ul>\n                </Divider>\n                <div className=\"display\" >\n                    <div className=\"activities-display\">\n                        <div className=\"search-activities search-bar\">\n                    <h3>I'll Search Through Google Maps</h3>\n                    <SearchForm \n                        handleOnChange={this.handleOnChange} \n                        handleOnSelect={this.handleOnSelect} \n                        handleOnSearch={this.handleOnSearch}\n                    />\n                    <Divider />\n                    <SearchActivitiesContainer\n                        handleAdd={this.handleAdd}\n                        handleSelectPlace={this.handleSelectPlace}\n                        loading={this.state.loading}\n                        activities={this.state.results} />\n                    </div>\n                    <GoogleMapsContainer \n                        handleOnChange={this.handleOnChange} \n                        handleOnSelect={this.handleOnSelect} \n                        handleOnSearch={this.handleOnSearch}\n                        defaultGeocode={this.state.search.geocode}\n                        handleSelectPlace={this.handleSelectPlace}\n                        selected={this.state.selected}\n                        markers={this.state.results}\n                        />\n                </div>\n                </div>\n            </>\n        )\n    }\n}","import React from 'react';\nimport DisplayActivitiesContainer from './containers/DisplayActivitiesContainer'\n\nconst CreateEvent = props => {\n    const routePage = (path) => {\n        props.history.push(path)\n    }\n\n    return (\n        <DisplayActivitiesContainer \n            openModal={props.openModal}\n            eventId={props.eventId}\n            handleRoutePage={routePage}\n            />\n    )\n} \n\nCreateEvent.defaultProps = {\n    event: ''\n}\n\nexport default CreateEvent","import React from 'react'\nimport {Card, Feed, Button} from 'semantic-ui-react'\n\nconst EventCard = props => {\n    const renderDate = (date) => {\n        return `${date.toDateString()}`\n    }\n    \n    const renderActivities = () => {\n        return props.event.activities.map(activity => {\n            return (\n                <Feed.Event key={activity.id}>\n                    <Feed.Label image={activity.icon ? activity.icon : 'https://www.pinclipart.com/picdir/big/397-3973323_kangaroo-silhouette-free-png-image-kangaroo-stencil-png.png'} />\n                    <Feed.Content>\n                        <Feed.Summary>\n                            {activity.name}\n                        </Feed.Summary>\n                        <Feed.Meta content={activity.formatted_address} />\n                    </Feed.Content>\n                </Feed.Event>\n            )\n        })\n    }\n\n    return (\n        <div className=\"event\" data-testid=\"event-card\">\n            <Card key={props.event.id}>\n                <Card.Content>\n                    <Card.Header>{renderDate(props.event.date)}</Card.Header>\n                </Card.Content>\n                <Card.Content >\n                    <Feed id=\"activities\">\n                    {renderActivities()}\n                    </Feed>\n                </Card.Content>\n                <Card.Content extra>\n                    <Button color=\"red\" onClick={() => props.handleDeleteEvent(props.event.id)}>Delete</Button>\n                    {/* <Button secondary>Inspect</Button> */}\n                </Card.Content>\n            </Card>\n        </div>\n    )\n}\n\nEventCard.defaultProps = {\n    event: {\n        date: new Date(),\n        activities: [{\n            image: \"\",\n            name: \"Cannot be found\",\n            id: 1\n        }],\n        attendees: \"\"\n    }\n}\n\nexport default EventCard","import React from 'react';\nimport EventCard from '../presentational/EventCard';\n\nconst DisplayEvents = props => {\n\n    const renderEvents = (props) => {\n        return props.events.length > 0 ? props.events.map(event => {\n            return <EventCard \n                event={event} \n                key={event.id} \n                handleDeleteEvent={props.handleDeleteEvent} />\n        }) : [];\n    }\n\n    return (\n        <div className='user-show'>\n            {renderEvents(props)}\n        </div>\n    )\n\n}\n\nexport default DisplayEvents","import React from 'react';\n\nconst Welcome = props => {\n    return (\n        <>\n        <h2>Welcome, {props.name ? props.name : \"\"}</h2>\n        <h3>Wanna Hang?</h3>\n        </>\n    )\n}\n\nWelcome.defaultProps = {\n    name: \"\"\n}\n\nexport default Welcome","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\n\nclass EditUserModal extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: this.props.user\n        }\n    }\n    \n\n    handleOnChange = (event) => {\n        const {id, value} = event.target\n        this.setState({\n            user: {...this.state.user, [id]: value}\n        })\n    }\n\n    render() {\n        const {name, email} = this.state.user\n        return (\n            <Form onChange={this.handleOnChange}>\n                <Form.Field >\n                    <label>Name</label>\n                    <input value={name} id=\"name\"/>\n                </Form.Field>\n                <Form.Field>\n                    <label>Email</label>\n                    <input value={email} id=\"email\"/>\n                </Form.Field>\n                <Form.Group >\n                    <Button onClick={() => this.props.handleEditUser(this.state.user)} color=\"green\">\n                        Submit\n                    </Button>\n                    <Button onClick={this.props.handleDeleteUser} color=\"red\">\n                        Delete\n                    </Button>\n                </Form.Group>\n            </Form>\n        )\n    }\n    \n}\n\nexport default EditUserModal","import React from 'react';\nimport DisplayEvent from \"./containers/DisplayEvents\"\nimport { Header, Modal, Button, Icon } from \"semantic-ui-react\"\nimport Welcome from './presentational/Welcome'\nimport EditUserModal from './components/EditUserModal';\nimport { api } from './services/api';\n\nexport default class UserShow extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            edit: false,\n            upcomingEvents: [],\n            pastEvents: [],\n            today: new Date(),\n            user : {\n                name: \"\",\n                email: \"\",\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.fetchUserInfo()\n    }\n\n    fetchUserInfo = () => {\n        api.auth.getCurrentUser()\n            .then(this.readJson)\n    }\n\n    readJson = (json) => {\n        const { attendees, events, name, email } = json\n        if (json.error) {\n            console.log(json)\n        } else {\n            this.setState({\n                user: {\n                    name: name,\n                    email: email\n                },\n                ...this.segmentEvents([...events, ...attendees]) \n            })\n        }\n    }\n\n    segmentEvents = (events) => {\n        let bifurcated = {\n            upcomingEvents: [],\n            pastEvents: [],\n        }\n\n        for (let i = 0; i < events.length; i++) {\n            let eventDate = new Date(`${events[i].date}T01:00`)\n            if (this.state.today <= eventDate) {\n                bifurcated.upcomingEvents.push({...events[i], date: eventDate })\n            } else {\n                bifurcated.pastEvents.push({...events[i], date: eventDate })\n            }\n        }\n        return bifurcated\n    }\n\n    toggleEditModal = () => {\n        this.setState({\n            edit: !this.state.edit\n        })\n    }\n\n    handleEditUser = (edited) => {\n        console.log(edited)\n        api.auth.editCurrentUser({user: edited})\n            .then(json => {\n                this.setState({\n                    edit: false,\n                    user: {\n                        name: json.name,\n                        email: json.email\n                    }\n                })\n            })\n    }\n\n    handleDeleteUser = () => {\n        api.auth.deleteCurrentUser()\n            .then(json => {\n                this.props.handleLogout()\n            })\n    }\n\n    handleDeleteEvent = (eventId) => {\n        api.event.deleteEvent(eventId)\n            .then(json => {\n                this.setState({\n                    pastEvents: this.state.pastEvents.filter(event => event.id != eventId),\n                    upcomingEvents: this.state.upcomingEvents.filter(event => event.id != eventId)\n            })})\n    }\n\n    render() {\n        return (\n            <>\n                <Welcome name={this.state.user.name} />\n                \n                <div>\n                    <Header>Upcoming Events</Header>\n                    <DisplayEvent events={this.state.upcomingEvents} handleDeleteEvent={this.handleDeleteEvent}/>\n                </div>\n                <div>\n                    <Header>Your Past events</Header>\n                    <DisplayEvent events={this.state.pastEvents} handleDeleteEvent={this.handleDeleteEvent}/>\n                </div>\n\n                <br/>\n                <Button onClick={this.toggleEditModal} >Edit Your Info</Button>\n                <Modal open={this.state.edit} handletoggle={this.toggleEditModal}>\n                    <Modal.Header><Icon name=\"times\" onClick={this.toggleEditModal}/>Edit Your Info</Modal.Header>\n                    <Modal.Content>\n                        <EditUserModal \n                            user={this.state.user} \n                            handleEditUser={this.handleEditUser}\n                            handleDeleteUser={this.handleDeleteUser}/>\n                    </Modal.Content>\n                </Modal>\n            </>\n        )\n    }\n}","import React from 'react'\nimport { Header, Modal , Form, Divider} from 'semantic-ui-react'\nimport { api } from \"../../services/api\"\n\nconst withLogin = (WrappedComponent) => {\n    class WithLogin extends React.Component {\n        constructor() {\n            super()\n            this.state = {\n                open: false,\n                login: {\n                    email: \"\",\n                    password: \"\"\n                },\n                signup: {\n                    email: \"\",\n                    name: \"\",\n                    password: \"\"\n                },\n                error: \"\",\n                loggedIn: !!localStorage[\"token\"]\n            }\n        }\n\n        handleChange = (type) => {\n            return (e, {name, value}) => {\n                this.setState({[type] : { ...this.state[type], [name]: value }})\n            }\n        }\n\n        handleOnSignupChange = (event) => {\n            event.persist()\n            this.setState(prevState => {\n                return {\n                    signup: {\n                        ...prevState.signup,\n                        [event.target.id]: event.target.value\n                    }\n                }\n            })\n        }\n\n        handleOnLoginChange = (event) => {\n            event.persist()\n            this.setState(prevState => {\n                return {\n                        login: {\n                        ...prevState.signup,\n                        [event.target.id]: event.target.value\n                    }\n                }\n            })\n        }\n\n        handleLoginClick = () => {\n            api.auth.login({ user: this.state.login })\n                .then(json => {\n                    if (json.error) {\n                        this.setState({\n                            error: json.error\n                        })\n                    } else {\n                        localStorage.setItem('token', json.jwt)\n                        this.handleLogin()\n                    }\n                })\n        }\n\n        handleSignupClick = () => {\n            api.user.signup({user: this.state.signup})\n                .then(json => {\n                    if (json.error) {\n                        this.setState({\n                            error: json.error\n                        })\n                    } else {\n                        localStorage.setItem('token', json.user.jwt)\n                        this.handleLogin()\n                    }\n                })\n                .catch(console.log)\n        }\n\n        handleLogout = () => {\n            localStorage.clear()\n            this.setState({loggedIn: false})\n            this.props.history.push('/')\n        }\n\n        handleLogin = () => {\n            this.toggle()\n            this.setState({loggedIn: true})\n        }\n\n        toggle = () => {\n            this.setState({\n                open: !this.state.open\n            })\n        }\n\n        eventLink = () => {\n            this.props.history.push('/events/new')\n        }\n\n        render() {\n            const {signup, login} = this.state\n            return (\n                <>\n                    <WrappedComponent \n                    toggle={this.toggle}\n                    logout={this.handleLogout}\n                    loggedIn={this.state.loggedIn}\n                    eventLink={this.eventLink}\n                    />\n                    <Modal size=\"small\" open={this.state.open} onClose={this.toggle} closeOnDimmerClick={true}>\n                    <Modal.Header>Log in/Sign up</Modal.Header>\n                        <Modal.Content image>\n                        <Modal.Description>\n                            <span style={{color: \"red\"}}>{`${this.state.error}`}</span>\n                            <Form key=\"login\">\n                                <Form.Input \n                                    placeholder=\"Email\"\n                                    name=\"email\"\n                                    value={login.email}\n                                    onChange={this.handleChange(\"login\")} />\n                                <Form.Input \n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    value={login.password}\n                                    onChange={this.handleChange(\"login\")} />\n                                <Form.Button data-testid=\"login-btn\" onClick={this.handleLoginClick} className=\"login\" fluid={true} color=\"green\">Login</Form.Button>\n                            </Form>\n                            <Divider horizontal>Or</Divider>\n                            <Header>Sign Up</Header>\n                            <Form key=\"signup\">\n                                <Form.Input \n                                    placeholder=\"Name\"\n                                    name=\"name\"\n                                    value={signup.name}\n                                    onChange={this.handleChange(\"signup\")} />\n                                <Form.Input \n                                    placeholder=\"Email\"\n                                    name=\"email\"\n                                    value={signup.email}\n                                    onChange={this.handleChange(\"signup\")} />\n                                <Form.Input \n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    value={signup.password}\n                                    onChange={this.handleChange(\"signup\")} />\n                                <Form.Button data-testid=\"signup-btn\" className=\"login\" onClick={this.handleSignupClick} fluid={true} color=\"yellow\">Sign Up</Form.Button>\n                            </Form>\n                        </Modal.Description>\n                        </Modal.Content>\n                    </Modal>\n                </>\n            )\n        }\n    }\n    return WithLogin\n}\n\nexport default withLogin","import React from 'react'\nimport { Button } from 'semantic-ui-react'\nimport withLogin from './HOC/withLogin'\n\nconst LandingLogin = props => {\n    const renderButton = () => {\n        if (props.loggedIn) {\n            return (\n                <Button color=\"red\" onClick={props.eventLink} >\n                    Get Started!\n                </Button>\n            )\n        } else {\n            return (\n                <Button color=\"red\" onClick={props.toggle}>\n                    Sign Up Here\n                </Button>\n            )\n        }\n    }\n\n    return (\n        <>\n            {renderButton()}\n        </>\n    )\n}\n\nexport default withLogin(LandingLogin)","import React from 'react'\nimport { Button, Divider } from 'semantic-ui-react';\nimport LandingLogin from '../components/LandingLogin';\n\nconst LandingContainer = props => {\n\n    return (\n        <div className=\"landing-container\" >\n            <div className=\"landing-card\" >\n                <h3>Welcome to <span>Kangaroo Hangout</span></h3>\n                <p>An app that let's you plug in an address and search for things nearby, having them displayed on a map. You can chain together multiple places grouped together in one event and set a date as well, allowing you to better plan a future outing to a new part of the city. Make a profile to get started!</p>\n                <Divider/>\n                <LandingLogin history={props.history} />\n            </div>\n        </div>\n    )\n\n}\n\nexport default LandingContainer","import React from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport withLogin from './HOC/withLogin'\nimport { NavLink } from 'react-router-dom'\n\nconst Navlogin = props => {\n\n    const conditionalUserLink = () => {\n        if (props.loggedIn) {\n            return (\n                <>\n                    <NavLink exact to=\"/user\" >\n                        <Menu.Item name='profile'>\n                            Profile\n                        </Menu.Item>\n                    </NavLink>\n                    <Menu.Item name=\"login\" onClick={props.logout}>\n                        Log out\n                    </Menu.Item>\n                </>\n            ) \n        } else {\n            return (\n                <Menu.Item onClick={props.toggle}>\n                    Log in\n                </Menu.Item>\n            )\n        }\n    }\n\n    return (\n        <>\n            {conditionalUserLink()}\n        </>\n    )\n    \n}\n\nexport default withLogin(Navlogin)","import React from 'react';\nimport { Menu } from 'semantic-ui-react'\nimport Navlogin from \"./Navlogin\"\nimport { NavLink } from 'react-router-dom'\n\nconst NavBar = props => {\n    return (\n        <Menu >\n            <NavLink exact to=\"/\" >\n                <Menu.Item name='home'>\n                    Home\n                </Menu.Item>\n            </NavLink>\n            <NavLink exact to=\"/events/new\" >\n                <Menu.Item name='new'>\n                    Create Event\n                </Menu.Item>\n            </NavLink>\n            <Menu.Menu position=\"right\" >\n                <Navlogin history={props.history} />\n            </Menu.Menu>\n        </Menu>\n    )\n}\n\nexport default NavBar","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport CreateEvent from './CreateEvent';\nimport UserShow from './UserShow'\nimport LandingContainer from './containers/LandingContainer'\nimport NavBar from './components/NavBar'\n\nconst App = () => {\n  return (\n      <Router>\n        <Route path=\"/\" component={(routerProps) => <NavBar {...routerProps}/>} />\n        <Route exact path=\"/\" component={(routerProps) => <LandingContainer {...routerProps} />} />\n        <Route path=\"/events/new\" component={(routerProps) => <CreateEvent {...routerProps}\n                                                    />} />\n        <Route path=\"/user\" component={() => {\n          if (localStorage[\"token\"]) {\n            return <UserShow />\n          } else {\n            return <Redirect to=\"/\"/>\n          }\n        }} />\n      </Router>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}